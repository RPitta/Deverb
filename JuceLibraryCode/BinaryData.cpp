/* ==================================== JUCER_BINARY_RESOURCE ====================================

   This is an auto-generated file: Any edits you make may be overwritten!

*/

namespace BinaryData
{

//================== deverbBg.png ==================
static const unsigned char temp_binary_data_0[] =
{ 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,2,88,0,0,1,44,8,2,0,0,0,144,95,90,193,0,0,0,1,115,82,71,66,0,174,206,28,233,0,0,0,4,103,65,77,65,0,0,177,143,11,252,97,5,0,0,0,9,112,72,89,115,0,0,14,195,0,0,14,195,1,199,111,168,100,0,0,9,103,73,68,65,
84,120,94,237,221,49,107,28,103,2,199,225,205,117,118,14,217,88,28,97,57,19,57,2,65,72,161,20,113,130,9,8,163,124,128,132,148,46,175,117,105,55,254,8,110,146,82,109,74,55,7,70,250,0,119,136,64,8,142,12,57,87,134,128,115,43,114,183,132,32,157,108,142,
168,141,172,157,149,86,90,73,126,119,53,163,149,248,63,15,6,191,54,201,206,104,6,230,231,121,247,157,221,183,22,23,23,91,0,144,234,79,213,239,0,16,73,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,
38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,
32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,218,91,139,139,139,213,16,96,210,182,103,23,126,175,134,245,184,252,226,219,75,213,112,95,221,91,89,159,126,209,105,181,102,54,102,223,173,254,226,100,91,235,
211,155,59,255,125,165,124,103,122,63,75,51,59,127,65,143,252,225,131,57,30,33,4,206,143,133,231,127,187,219,173,198,181,153,122,246,224,163,167,131,215,202,154,183,210,127,253,226,151,237,44,45,254,227,219,106,124,237,206,211,47,62,127,85,253,225,36,
35,111,165,76,67,47,219,211,244,145,175,12,30,207,177,152,26,5,206,141,217,79,234,191,74,182,90,175,230,31,62,159,173,198,175,213,188,149,238,59,63,15,94,235,11,92,185,190,93,141,22,158,151,85,176,181,181,242,65,175,40,13,237,252,133,60,242,125,51,119,
15,108,101,116,66,8,156,23,27,55,110,86,163,186,117,111,223,223,168,134,117,111,101,235,135,233,205,222,104,253,207,91,189,65,169,141,207,10,111,143,214,230,31,63,234,77,51,54,180,243,23,242,200,15,232,126,120,167,255,111,139,113,8,33,112,78,44,252,54,
83,141,26,240,215,237,107,189,65,205,91,153,90,255,174,255,78,88,231,210,203,106,84,100,246,254,179,178,61,105,175,126,53,93,13,27,218,249,11,121,228,15,184,250,241,70,181,149,113,8,33,112,62,52,52,111,86,105,255,255,234,238,239,19,159,23,173,44,60,191,
93,116,123,52,245,236,193,251,47,170,241,197,154,23,237,107,232,200,31,210,223,202,88,132,16,56,23,154,155,55,219,213,237,205,91,54,54,47,250,218,229,151,165,151,250,210,73,209,206,210,224,98,147,9,207,139,118,86,230,87,151,122,191,230,58,221,169,234,
111,223,168,153,35,127,216,218,95,246,254,185,48,58,171,70,1,136,38,132,192,57,48,123,255,159,69,83,133,107,243,223,236,189,97,182,163,116,57,126,181,142,191,116,43,221,185,213,199,195,207,192,13,59,252,168,92,241,179,16,5,186,115,203,247,174,15,220,
110,54,181,243,99,30,249,153,95,190,124,248,83,193,108,228,41,143,252,246,141,47,127,154,105,87,127,56,94,123,245,206,254,4,242,232,132,16,152,188,141,207,30,21,173,28,57,244,196,88,105,120,170,168,148,110,165,208,214,202,173,254,98,206,74,125,33,28,
190,178,55,180,243,229,71,254,214,143,235,213,248,234,167,157,15,63,239,22,189,39,215,204,145,63,100,248,68,140,200,123,132,192,196,149,174,39,108,255,251,192,115,211,219,239,125,92,246,16,94,239,205,176,230,214,139,246,109,254,242,118,53,58,157,206,
210,208,253,205,164,215,139,206,220,253,254,139,135,213,175,219,133,21,220,249,65,30,239,222,212,54,185,94,116,107,255,217,146,177,9,33,48,105,165,235,9,15,45,136,152,217,120,247,205,147,102,59,170,139,126,221,171,22,223,254,223,240,122,209,145,31,37,
60,194,206,253,205,240,231,164,52,180,243,141,174,228,220,251,65,26,220,74,119,110,255,217,146,241,9,33,48,97,197,171,22,159,28,184,228,93,251,244,215,178,217,185,222,67,2,117,175,90,60,114,153,226,136,143,18,30,97,231,202,126,196,253,77,67,59,223,224,
74,206,129,233,202,38,215,139,182,127,125,175,134,155,77,33,4,38,235,66,206,139,30,174,114,77,218,171,7,23,200,84,26,218,249,166,102,44,167,158,61,88,220,159,174,108,114,94,180,213,122,117,165,236,131,206,79,100,177,12,48,81,227,173,90,28,245,179,170,
203,183,178,252,247,203,213,248,36,151,142,249,198,131,237,143,190,254,126,190,104,194,118,88,181,171,195,26,218,249,210,151,29,197,214,218,252,234,87,131,207,86,142,121,126,119,148,253,143,199,30,180,81,8,33,48,73,197,229,232,182,59,255,169,134,87,110,
150,46,214,232,175,90,44,221,202,86,183,253,178,191,149,19,188,124,50,243,244,136,239,24,122,109,236,186,28,191,244,177,161,157,63,77,179,143,49,20,179,211,236,124,209,89,30,122,200,100,44,66,8,76,80,233,227,104,99,170,234,82,247,86,78,248,222,159,49,
67,120,68,66,250,26,218,249,70,142,252,208,83,31,103,115,126,79,203,123,132,192,228,148,46,120,25,83,251,95,187,87,201,186,183,114,232,221,202,3,182,254,91,252,217,99,251,6,62,86,123,72,67,59,95,250,178,107,243,203,43,229,63,81,247,198,66,53,234,57,155,
243,123,106,66,8,76,76,233,130,151,177,76,245,63,174,186,238,173,156,248,177,150,163,63,74,184,183,159,71,106,104,231,75,95,182,243,100,122,243,187,119,202,159,9,153,249,100,239,75,151,118,156,205,249,61,61,33,4,38,165,244,65,192,49,12,172,161,168,123,
43,111,88,47,58,226,163,132,7,63,86,123,72,67,59,95,250,178,187,183,143,157,233,245,242,231,0,111,254,182,255,29,185,103,115,126,107,32,132,192,132,52,53,111,214,157,91,29,184,74,158,229,188,232,200,214,230,143,123,175,177,103,210,243,162,189,219,199,
75,63,255,48,206,236,104,99,231,183,61,120,126,235,32,132,192,100,52,48,111,214,157,234,44,221,250,230,222,245,23,251,87,201,51,157,23,125,173,252,153,250,238,220,242,241,111,13,238,154,252,188,104,111,176,249,232,70,121,119,250,179,163,77,204,139,78,
117,86,230,151,239,189,63,112,126,107,97,213,40,0,209,220,17,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,
77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,
64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,
0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,
132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,
154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,
104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,
162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,
1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,
33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,
132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,68,19,66,0,162,9,33,0,209,132,16,128,104,66,8,64,52,33,4,32,154,16,2,16,77,8,1,136,38,132,0,
68,19,66,0,130,181,90,127,0,129,142,160,130,81,41,167,154,0,0,0,0,73,69,78,68,174,66,96,130,0,0 };

const char* deverbBg_png = (const char*) temp_binary_data_0;


const char* getNamedResource (const char* resourceNameUTF8, int& numBytes);
const char* getNamedResource (const char* resourceNameUTF8, int& numBytes)
{
    unsigned int hash = 0;

    if (resourceNameUTF8 != nullptr)
        while (*resourceNameUTF8 != 0)
            hash = 31 * hash + (unsigned int) *resourceNameUTF8++;

    switch (hash)
    {
        case 0xd159e86f:  numBytes = 2514; return deverbBg_png;
        default: break;
    }

    numBytes = 0;
    return nullptr;
}

const char* namedResourceList[] =
{
    "deverbBg_png"
};

const char* originalFilenames[] =
{
    "deverbBg.png"
};

const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8);
const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8)
{
    for (unsigned int i = 0; i < (sizeof (namedResourceList) / sizeof (namedResourceList[0])); ++i)
    {
        if (namedResourceList[i] == resourceNameUTF8)
            return originalFilenames[i];
    }

    return nullptr;
}

}
